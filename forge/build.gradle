import org.jetbrains.kotlin.gradle.dsl.JvmTarget

//file:noinspection GroovyAssignabilityCheck
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

kotlin {
    jvmToolchain 17
}

compileKotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_17
    }
}

classes {
    finalizedBy("copyKotlinClasses")
}

loom {
    runs {
        server {
            programArgs.remove("nogui")
        }
    }
}

tasks.register("copyKotlinClasses") {
    doLast {
        copy {
            from fileTree("$projectDir/build/classes/kotlin/main")
            into file("$projectDir/build/classes/java/main")
        }
    }
}

jar.mustRunAfter("copyKotlinClasses")

jar {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

compileKotlin {
    outputs.dir("$projectDir/build/classes/java/main")
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    // Add KFF Maven repository
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    include implementation("com.formdev:flatlaf:$flatlaf_version")
    include implementation("com.formdev:flatlaf-intellij-themes:$flatlaf_version")
    include implementation("com.formdev:flatlaf-extras:$flatlaf_version")
    include implementation("com.formdev:flatlaf-swingx:$flatlaf_version")
    include forgeRuntimeLibrary("com.miglayout:miglayout-swing:11.0")
    include forgeRuntimeLibrary("com.miglayout:miglayout-core:11.0")
    include "org.swinglabs.swingx:swingx-all:1.6.5-1"
    include 'com.kitfox.svg:svg-salamander:1.0'

    // Adds KFF as dependency and Kotlin libs
    modImplementation 'thedarkcolour:kotlinforforge:3.8.0'
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    //noinspection GrDeprecatedAPIUsage
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
    manifest {
        attributes([
                "Specification-Title"     : "Dark Server Console",
                "Specification-Vendor"    : "Ultreon Team",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Ultreon Team",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"           : "dark-console-common.mixins.json"
        ])
    }
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}